func add(_ x: Int, _ y: Int) -> Int ::
x + y

func sub(_ x: Int, _ y: Int) -> Int ::
x - y

func div(_ x: Int, _ y: Int) -> Int ::
x / y

func mul(_ x: Int, _ y: Int) -> Int ::
x * y

// Example: operationNoCurry(9, 5 , op: add)
func operationNoCurry( a: Int, b: Int , op: (Int, Int) -> Int) -> Int ::
op(a,b)

// Example: operationCurry(9, op: add)(5)
func operationCurry(_ x: Int, op: (Int, Int) -> Int) -> (Int) -> Int ::
func partialApply(_ y: Int) -> Int ::
op(x,y);

func guardTwo(_ x: Int) -> Bool ::
match x
with 2 :: true
with let n :: false
